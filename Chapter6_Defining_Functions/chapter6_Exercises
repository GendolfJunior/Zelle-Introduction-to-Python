True/False
1. False - Ok
2. False - OK
3. True - Ok
4. True - Ok
5. False - Ok
6. False - Ok
7. False - Ok
8. True - Ok
9. True - Ok
10. False - Ok

Multiple choice
1. b - Ok
2. a - Ok
3. a - Ok
4. b - Ok
5. d - Ok
6. a - Ok
7. d - Ok
8. a - Ok
9. d - Ok
10. a - Ok

Discussion
1. In your own words, describe the two motivations for defining functions in your programs.
+ the code is easier to read and usually shorter
+ you can call functions in many places (modularity)

2. We have been thinking about computer programs as sequences of instructions
where the computer methodically executes one instruction and then
moves on to the next one. Do programs that contain functions fit this
model? Explain your answer.
+ Yes, they do fit. They fit this model because function is the same set of instructions.

3. Parameters are an important concept in defining functions.
a) what is the purpose of parameters?
+ parameters are used to pass information to the function
b) What is the difference between a formal parameter and an actual
parameter?
+ formal parameter is what is defined in a function
+ actual parameter is what is passed inside function from program variables
c) In what ways are parameters similar to and different from ordinary
variables?
+ similar to variables they can hold values
+ values could be passed from a function back to the main program

4. Functions can be thought of as miniature (sub )programs inside other programs.
Like any other program, we can think of functions as having input
and output to communicate with the main program.
a) How does a program provide "input" to one of its functions?
    + by passing values via function parameters
b) How does a function provide "output" to the program?
    + by returning values in parameters
5. Consider this very simple function:
def cube(x):
    answer = x * x * x
    return answer

    a) What does this function do?
+ It receives some value x, multiplies it then returns it back
    b) Show how a program could use this function to print the value of y, assuming y is a variable.
+ Specifing in the main program call function parameter y value.
    c) Here is a fragment of a program that uses this function:
answer = 4
result = cube(3)
print(answer, result)

The output from this fragment is 4 27. Explain why the output is not 27 27, even though cube seems to change the value of answer to 27.
+ It doesn't change the variable because the scope of variables is different.